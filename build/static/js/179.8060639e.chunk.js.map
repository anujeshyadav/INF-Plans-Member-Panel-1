{"version":3,"sources":["views/apps/agent/AddAgent.js"],"names":["AddAgent","props","onEditorStateChange","editorState","setState","short_desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","console","log","target","value","name","handleImage","files","selectedFile","changeHandler1","allPlan","getOptionDataList","axiosConfig","get","then","response","data","plannameList","submitHandler","preventDefault","formData","FormData","append","state","title","plan_max","Number","plan_deductible","coverageAmt","start_date","end_date","total","email","coverage_area","dob","post","swal","catch","error","planname","long_desc","highlight_desc","upload_pdf","this","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","required","type","placeholder","onChange","Address","Ripple","color","Component"],"mappings":"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","file":"static/js/179.8060639e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class AddAgent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planname: {},\r\n      plannameList: [],\r\n      short_desc: \"\",\r\n      title: \"\",\r\n      long_desc: \"\",\r\n      highlight_desc: \"\",\r\n      upload_pdf: \"\",\r\n      selectedFile: null,\r\n      plan_max: \"\",\r\n      plan_deductible: \"\", //  number\r\n      coverageAmt: \"\", //  number\r\n      start_date: \"\", //  str\r\n      end_date: \"\",\r\n      total: \"\", //  number\r\n      email: \"\",\r\n      coverage_area: \"\", //  str\r\n      dob: \"\",\r\n    };\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    // console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n      short_desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleImage = (e) => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({ selectedFile: e.target.files[0] });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ allPlan: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOptionDataList();\r\n  }\r\n\r\n  getOptionDataList = () => {\r\n    axiosConfig.get(`/user/infPlanList`).then((response) => {\r\n      console.log(response.data);\r\n      this.setState({ plannameList: response.data });\r\n    });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"planname\", this.state.allPlan);\r\n    formData.append(\"short_desc\", this.state.short_desc);\r\n    formData.append(\"title\", this.state.title);\r\n    // formData.append(\"long_desc\", \"long_desc\");\r\n    // formData.append(\"highlight_desc\", \"highlight_desc\");\r\n    formData.append(\"plan_max\", this.state.plan_max);\r\n    formData.append(\"plan_deductible\", Number(this.state.plan_deductible));\r\n    formData.append(\"coverageAmt\", Number(this.state.coverageAmt));\r\n    formData.append(\"start_date\", this.state.start_date);\r\n    formData.append(\"end_date\", this.state.end_date);\r\n    formData.append(\"total\", Number(this.state.total));\r\n    formData.append(\"email\", this.state.email);\r\n    formData.append(\"coverage_area\", this.state.coverage_area);\r\n    formData.append(\"dob\", this.state.dob);\r\n\r\n    if (this.state.selectedFile != null) {\r\n      formData.append(\"upload_pdf\", this.state.selectedFile);\r\n    }\r\n    axiosConfig\r\n      .post(\"/user/createBmiPlan\", formData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/plans/CreatedPlanList\" tag=\"a\">\r\n                  AgentList\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active> Add Agent</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Agent\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/agent/AgentList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Agent Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"AgentName\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Address</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"Address\"\r\n                    placeholder=\"Address\"\r\n                    value={this.state.Address}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>City</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"City\"\r\n                    placeholder=\"City\"\r\n                    value={this.state.Address}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>State</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"State\"\r\n                    placeholder=\"State\"\r\n                    value={this.state.Address}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Zipcode</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"Zipcode\"\r\n                    placeholder=\"Zipcode\"\r\n                    value={this.state.Address}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Last Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"plan_max\"\r\n                    placeholder=\"Last Name\"\r\n                    value={this.state.plan_max}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Adhar Image</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"file\"\r\n                    name=\"upload_pdf\"\r\n                    onChange={this.handleImage}\r\n                  />\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"plan_deductible\"\r\n                    placeholder=\"Enter Mobile\"\r\n                    value={this.state.plan_deductible}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>DOB</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dob\"\r\n                    value={this.state.dob}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n              </Row>\r\n              <Row className=\"m-1\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add Agent\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}