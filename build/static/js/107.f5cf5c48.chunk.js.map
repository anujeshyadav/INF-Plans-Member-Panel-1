{"version":3,"sources":["assets/img/pages/login.png","views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["module","exports","LoginJWT","props","handlechange","e","preventDefault","setState","target","name","value","handleLogin","payload","email","state","axiosConfig","post","then","response","console","log","data","ShowScreen","ad_token","token","localStorage","setItem","id","catch","error","swal","handleSubmitOTP","MemberId","getItem","otp","emailotp","res","window","location","replace","err","showDashBoard","Fragment","CardBody","className","this","containerStyle","inputStyle","onChange","numInputs","renderSeparator","renderInput","Button","onClick","color","Form","onSubmit","FormGroup","Input","type","placeholder","required","size","Label","icon","label","defaultChecked","handleRemember","to","render","history","Ripple","React","Component","connect","values","auth","login","loginWithJWT","Login","activeTab","toggle","tab","Row","Col","sm","xl","lg","md","Card","src","logo","width","style","padding","alt","CardHeader","CardTitle","Nav","tabs","NavItem","TabContent","TabPane","tabId","CheckBoxesVuexy","checked","disabled"],"mappings":"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","file":"static/js/107.f5cf5c48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.fd58a052.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nclass LoginJWT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      // password: \"\",\r\n      ShowScreen: false,\r\n      showDashBoard: false,\r\n    };\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    const payload = {\r\n      email: this.state.email,\r\n    };\r\n    e.preventDefault();\r\n    // debugger;\r\n    axiosConfig\r\n      .post(\"/user/memberlogin\", payload)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({ ShowScreen: true });\r\n        // if (response.data.status === true) {\r\n        this.setState({ ad_token: response.data.token });\r\n        // swal(response.data.msg);\r\n        // swal(\"success Data\");\r\n        // localStorage.setItem(\"ad-token\", response.data.token);\r\n        localStorage.setItem(\"MemberId\", response.data.id);\r\n        // swal(\"OTP has been sent to Your Mail Id\", \"Please Check and verify\");\r\n        // window.location.replace(\"/#/\");\r\n        // } else if (response.data.status === 204) {\r\n        //   // swal(response.data.msg);\r\n        //   swal(\"testting\");\r\n        // }\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please enter valied Email. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  handleSubmitOTP = async (e) => {\r\n    debugger;\r\n    e.preventDefault();\r\n    let MemberId = localStorage.getItem(\"MemberId\");\r\n    let payload = {\r\n      otp: this.state.emailotp,\r\n    };\r\n    await axiosConfig\r\n      .post(`/user/verifyotp/${MemberId}`, payload)\r\n      .then((res) => {\r\n        localStorage.setItem(\"member-token\", res.data.token);\r\n        console.log(res.data.token);\r\n        swal(\"Submittted Successfully\");\r\n        window.location.replace(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          {this.state.ShowScreen ? (\r\n            <>\r\n              <OtpInput\r\n                containerStyle=\"true inputdata\"\r\n                inputStyle=\"true inputdataone\"\r\n                className=\"otpinputtype\"\r\n                value={this.state.emailotp}\r\n                name=\"emailotp\"\r\n                onChange={(otp) => this.setState({ emailotp: otp })}\r\n                numInputs={6}\r\n                renderSeparator={<span>-</span>}\r\n                renderInput={(props) => <input className=\"inputs\" {...props} />}\r\n              />\r\n              <Button\r\n                className=\"m-4\"\r\n                onClick={this.handleSubmitOTP}\r\n                color=\"primary\"\r\n              >\r\n                Verify OTP\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Form onSubmit={this.handleLogin}>\r\n                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"E-mail \"\r\n                    value={this.state.email}\r\n                    onChange={this.handlechange}\r\n                    required\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Mail size={15} />\r\n                  </div>\r\n                  <Label>Email </Label>\r\n                </FormGroup>\r\n                {/* <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={this.handlechange}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup> */}\r\n                <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"Remember me\"\r\n                    defaultChecked={false}\r\n                    onChange={this.handleRemember}\r\n                    required\r\n                  />\r\n                  <div className=\"float-right\">\r\n                    <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n                  </div>\r\n                </FormGroup>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button.Ripple color=\"primary\" type=\"submit\">\r\n                        Login\r\n                      </Button.Ripple>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport loginImg from \"../../../../assets/img/pages/login.png\";\r\nimport logo from \"../../../../assets/img/logo/inf-logo.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport LoginJWT from \"./LoginJWT\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n  };\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Row className=\"m-0 justify-content-center\">\r\n        <Col\r\n          sm=\"8\"\r\n          xl=\"7\"\r\n          lg=\"10\"\r\n          md=\"8\"\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n            <Row className=\"m-0\">\r\n              <Col\r\n                lg=\"6\"\r\n                sm=\"6\"\r\n                className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\r\n              >\r\n                <img\r\n                  src={logo}\r\n                  className=\"loginLogo\"\r\n                  width=\"100%\"\r\n                  style={{ padding: \"50px 50px\" }}\r\n                  alt=\"loginImg\"\r\n                />\r\n                {/* <img src={loginImg} alt=\"loginImg\" /> */}\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                  <CardHeader className=\"pb-1\">\r\n                    <CardTitle>\r\n                      <h4 className=\"mb-0\">Login</h4>\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <p className=\"px-2 auth-title\">\r\n                    Welcome back, please login to your INF Member account.\r\n                  </p>\r\n                  <Nav tabs className=\"px-2\">\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"1\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"1\");\r\n                        }}\r\n                      >\r\n                        JWT\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"2\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"2\");\r\n                        }}\r\n                      >\r\n                        Firebase\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"3\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"3\");\r\n                        }}\r\n                      >\r\n                        Auth0\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                  </Nav>\r\n                  <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <LoginJWT />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">{/* <LoginFirebase /> */}</TabPane>\r\n                    <TabPane tabId=\"3\">{/* <LoginAuth0 /> */}</TabPane>\r\n                  </TabContent>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}