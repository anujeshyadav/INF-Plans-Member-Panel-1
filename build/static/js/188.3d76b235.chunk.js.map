{"version":3,"sources":["views/apps/plans/CreatePlan.js"],"names":["CreatePlan","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler","e","console","log","target","value","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","planName","swal","catch","error","sm","listTag","href","tag","active","className","col-sm-6","render","history","onClick","push","onSubmit","this","lg","md","required","type","placeholder","onChange","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","Component"],"mappings":"uaAqBqBA,G,gEACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,oBAAsB,SAACC,GAErB,EAAKC,SAAS,CACZD,cACAE,KAAMC,IAAYC,uBAAaJ,EAAYK,yBAd5B,EAkBnBC,cAAgB,SAACC,GACfC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKV,SAAL,eAAiBM,EAAEG,OAAOE,KAAOL,EAAEG,OAAOC,SApBzB,EAsBnBE,cAAgB,SAACN,GACfA,EAAEO,iBACFC,IACGC,KAAK,mBAAoB,EAAKC,OAC9BC,MAAK,SAACC,GACL,EAAKlB,SAAS,CAAEmB,SAAU,KAC1B,EAAKnB,SAAS,CAAEC,KAAM,KACtBmB,IAAK,WAAY,yBAA0B,cAE5CC,OAAM,SAACC,GACNf,QAAQC,IAAIc,OA9BhB,EAAKN,MAAQ,CACXG,SAAU,GACVlB,KAAM,IAJS,E,0CAoCnB,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsB,GAAG,MACN,6BACE,kBAAC,IAAD,CAAYC,QAAQ,OAClB,kBAAC,IAAD,CAAgBC,KAAK,sBAAsBC,IAAI,KAA/C,QAGA,kBAAC,IAAD,CAAgBD,KAAK,6BAA6BC,IAAI,KAAtD,oBAGA,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,oBAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,gBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEH,UAAU,8BACVI,QAAS,kBAAMD,EAAQE,KAAK,gCAF9B,aAUR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAML,UAAU,MAAMM,SAAUC,KAAKvB,eACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwB,GAAG,IAAIC,GAAG,IAAId,GAAG,IAAIK,UAAU,IAClC,kBAAC,IAAD,qBACA,kBAAC,IAAD,CACEU,UAAQ,EACRC,KAAK,OACL5B,KAAK,WACL6B,YAAY,YACZ9B,MAAOyB,KAAKnB,MAAMG,SAClBsB,SAAUN,KAAK9B,iBAGnB,kBAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,IAAId,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAD,qBACA,kBAAC,SAAD,CACEc,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChB7C,YAAaoC,KAAKnB,MAAMjB,YACxBD,oBAAqBqC,KAAKrC,oBAC1B+C,QAAS,CACPC,QAAS,CACP,SACA,YACA,WACA,cAEFC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEpB,UAAW,6BACnBqB,OAAQ,CAAErB,UAAW,6BACrBsB,UAAW,CAAEtB,UAAW,6BACxBuB,cAAe,CACbvB,UAAW,6BAEbwB,KAAM,CAAExB,UAAW,8BAErByB,UAAW,CACTzB,UAAW,6BAEb0B,SAAU,CACR1B,UAAW,6BAEb2B,WAAY,CACV3B,UAAW,kCAMrB,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,CAAKQ,GAAG,IAAIC,GAAG,IAAId,GAAG,IAAIK,UAAU,QAClC,kBAAC,IAAO4B,OAAR,CACEC,MAAM,UACNlB,KAAK,SACLX,UAAU,aAHZ,yB,GAvIsB8B,e","file":"static/js/188.3d76b235.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class CreatePlan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planName: \"\",\r\n      desc: \"\",\r\n    };\r\n  }\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  onEditorStateChange = (editorState) => {\r\n    // console.log(editorState);\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    axiosConfig\r\n      .post(\"/user/addInfPlan\", this.state)\r\n      .then((response) => {\r\n        this.setState({ planName: \"\" });\r\n        this.setState({ desc: \"\" });\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/plans/CreatedPlanList\" tag=\"a\">\r\n                  Create Plan List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active> Create Plan</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Create Plan\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/plans/CreatedPlanList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"\">\r\n                  <Label>Created Plan</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"planName\"\r\n                    placeholder=\"Plan Name\"\r\n                    value={this.state.planName}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Descripition</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"m-1\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mt-1\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Create Plan\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}