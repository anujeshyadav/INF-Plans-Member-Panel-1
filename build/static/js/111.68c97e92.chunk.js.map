{"version":3,"sources":["assets/INF_Cancellation_Form.pdf","views/apps/plans/PolicyCancel.js","views/apps/plans/CreatedPlanList.js"],"names":["module","exports","PolicyCancel","style","padding","className","border","href","link","target","color","size","CreatedPlanList","props","getOptionDataList","axiosConfig","get","then","response","rowData","data","slice","setState","onGridReady","params","gridApi","api","gridColumnApi","columnApi","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","state","dropdownOpen","paginationPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","scriptName","id","value","Button","outline","toggle","bind","console","log","this","prevState","swal","buttons","cancel","catch","text","delete","Row","Col","sm","Card","CardBody","UncontrolledDropdown","DropdownToggle","tag","length","DropdownMenu","right","DropdownItem","onClick","Input","placeholder","onChange","e","Ripple","exportDataAsCsv","height","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/111.68c97e92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/INF_Cancellation_Form.8da43808.pdf\";","import React from \"react\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { FiExternalLink } from \"react-icons/fi\";\r\nimport link from \"../../../assets/INF_Cancellation_Form.pdf\";\r\n\r\nexport const PolicyCancel = () => {\r\n  return (\r\n    <div style={{ padding: \"41px 138px\" }} className=\"policycancelhead\">\r\n      <div style={{ border: \"1px solid #d3d3d3\" }} className=\"policyheadmain\">\r\n        <div style={{ padding: \"8px 8px\" }}>\r\n          <h5>\r\n            <b>Policy Cancellation</b>\r\n          </h5>\r\n          <div className=\"\">\r\n            <ol className=\"orderlist\">\r\n              <li>\r\n                Refund of premium, less a $25 processing fee, will be considered\r\n                only if Cancellation Form is received by the INF prior to the\r\n                effective date of coverage.\r\n              </li>\r\n              <li>\r\n                After that date, the premium is considered fully earned and\r\n                non-refundable.\r\n              </li>\r\n              <li>\r\n                All cancellation requests should be submitted by completing the\r\n                <a\r\n                  href={link}\r\n                  target=\"_blank\"\r\n                  className=\"\"\r\n                  style={{ color: \"blue\" }}\r\n                >\r\n                  {\" \"}\r\n                  Cancellation Form. <FiExternalLink size={16} />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                The form can be faxed to 408-520-4967 or emailed to\r\n                operations@infplans.com. Policy changes can not be made under\r\n                any circumstances once the policy becomes effective.\r\n              </li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Form,\r\n  Label,\r\n  Badge,\r\n  UncontrolledButtonDropdown,\r\n} from \"reactstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\n// import { ChevronDown } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { PolicyCancel } from \"./PolicyCancel\";\r\n\r\nclass CreatedPlanList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      rowData: [],\r\n      paginationPageSize: 20,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      defaultColDef: {\r\n        sortable: true,\r\n        // editable: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n\r\n      columnDefs: [\r\n        {\r\n          headerName: \"S.No\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 100,\r\n          filter: true,\r\n          // checkboxSelection: true,\r\n          // headerCheckboxSelectionFilteredOnly: true,\r\n          // headerCheckboxSelection: true,\r\n        },\r\n\r\n        {\r\n          headerName: \"Details\",\r\n          field: \"scriptName\",\r\n          width: 120,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Purchase Date\",\r\n          field: \"scriptName\",\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Name\",\r\n          field: \"scriptName\",\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Start Date\",\r\n          field: \"scriptName\",\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"End Date\",\r\n          field: \"scriptName\",\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Plan Name\",\r\n          field: \"scriptName\",\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.scriptName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          width: 600,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                <select id=\"cars\">\r\n                  <option value=\"volvo\">--Select--</option>\r\n                  <option value=\"saab\">Plan Document</option>\r\n                  <option value=\"opel\">ContactDoctor(nonInsurance)</option>\r\n                </select>\r\n                {/* <div className=\"dropdown mr-1 mb-1 d-inline-block\">\r\n                  <UncontrolledButtonDropdown>\r\n                    <DropdownToggle color=\"primary\" size=\"sm\" caret>\r\n                      Select\r\n                      <ChevronDown size={15} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem tag=\"a\">Option 1</DropdownItem>\r\n                      <DropdownItem tag=\"a\">Option 2</DropdownItem>\r\n                      <DropdownItem tag=\"a\">Option 3</DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledButtonDropdown>\r\n                </div> */}\r\n\r\n                <Button size=\"sm\" className=\"mx-1\" color=\"primary\" outline>\r\n                  Legacy Claim\r\n                </Button>\r\n                <Button size=\"sm\" className=\"mx-1\" color=\"primary\" outline>\r\n                  Claim\r\n                </Button>\r\n                <Button size=\"sm\" className=\"mx-1\" color=\"success\" outline>\r\n                  Extend\r\n                </Button>\r\n                {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/plans/editCreatedPlan/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              /> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    console.log(\"object\", this.state.dropdownOpen);\r\n    this.setState((prevState) => ({\r\n      dropdownOpen: !prevState.dropdownOpen,\r\n    }));\r\n  }\r\n  componentDidMount() {\r\n    this.getOptionDataList();\r\n  }\r\n\r\n  getOptionDataList = () => {\r\n    axiosConfig.get(`/user/infPlanList`).then((response) => {\r\n      //   console.log(response.data);\r\n      const rowData = response.data.slice(0, 1);\r\n      this.setState({ rowData });\r\n    });\r\n  };\r\n  runthisfunction(id) {\r\n    swal(\r\n      `Do You Want To Delete Permanently`,\r\n      \"This item will be deleted immediately\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"catch\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"cancel\":\r\n          break;\r\n        case \"catch\":\r\n          axiosConfig.delete(`/admin/dlt_infPlan/${id}`).then((response) => {\r\n            this.getOptionDataList();\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            {/* <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"\">\r\n                  <Label>Created Plan</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"scriptName\"\r\n                    placeholder=\"Plan Name\"\r\n                    value={this.state.scriptName}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mt-1\">\r\n                  <Button.Ripple\r\n                    // color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1 btn btn-success float-right\"\r\n                  >\r\n                    Create Plan\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form> */}\r\n            <Col sm=\"12\"></Col>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                  Active Plans\r\n                </h1>\r\n              </Col>\r\n              {/* <Col className=\"\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" btn btn-success float-right\"\r\n                      onClick={() => history.push(\"/app/plan/CreatePlan\")}\r\n                    >\r\n                      Create Plan\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}\r\n                          -\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ height: \"600px\" }}>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          // style={{height:\"300px\"}}\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n            <div className=\"policycancel\">\r\n              <PolicyCancel />\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatedPlanList;\r\n"],"sourceRoot":""}